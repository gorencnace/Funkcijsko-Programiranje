datatype yesNo = Yes | No;

fun toString1 x =
    case x of
	Yes => "Da"
      | No => "Ne";

fun toString2 Yes = "Da" 
  | toString2 No = "Ne";

datatype barva = Kriz | Pik | Srce | Karo
					 
datatype stopnja = As | Kralj | Kraljica | Fant | Stevilka of int

type karta = stopnja * barva;

val karte1 = [(Stevilka 2,Pik), (Stevilka 4,Pik), (As,Pik), (Fant,Pik),(Stevilka 8,Pik)];

val karte2 = [(Stevilka 2,Pik), (Stevilka 5,Pik), (As,Karo), (Fant,Pik), (Stevilka 8,Pik)];

			   
(* Kaksne barve je karta? *)
fun barvaKarte ((_,b) : karta) = b;

(* Ali je karta veljavna? *)
fun veljavnaKarta ((st,_) : karta) =
    case st of
	Stevilka i => if i >= 2 andalso i <= 10 then true else false
      | _ => true;

(* Koliko je vredna karta? *)
fun vrednostKarte ((st,_) : karta) =
    case st of
	Stevilka i => i
      | _ => 10;

(* Koliksna je vrednost vseh kart v roki? *)  
fun vsotaKart (ks : karta list) =
    if null ks
    then 0
    else vrednostKarte(hd ks) + vsotaKart(tl ks);

(* Ali imam v roki karte iste barve? *)
fun isteBarve (ks : karta list) =
    if null ks
    then true
    else let fun barva(b: barva, kl: karta list) =
		 if null (tl kl)
		 then barvaKarte(hd kl) = b
		 else barvaKarte(hd kl) = b andalso barva(b,tl kl)
	 in barva(barvaKarte(hd ks), tl ks)
	 end;

datatype number = Zero | Succ of number | Pred of number;

fun simp (n: number) =
    case n of
	Zero => Zero
     | Succ x => 
